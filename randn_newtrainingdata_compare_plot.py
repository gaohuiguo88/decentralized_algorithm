import torch
import matplotlib.pyplot as plt
for K_number in [1,4,7,10]:

    old = torch.load('./losslist_forestimation_K_%d.pt' % K_number)
    # torch.load('./gap_forestimation_K_%d.pt' % K_number)
    new = torch.load('./losslist_new_trainingdata_forestimation_K_%d.pt'%K_number)
    # torch.load('./gap_newtrainingdata_forestimation_K_%d.pt'%K_number)
    x_label = [i for i in range(2500)]
    plt.plot(x_label,old, label='randn(0,1)')
    plt.plot(x_label,new,label='generated by the problem')
    plt.legend()
    plt.xlabel('k')
    plt.ylabel('residual')
    plt.yscale('log')
    plt.title('K = %d'%K_number)
    plt.show()


    # torch.load('./acc_ll_mnist_gnn_new_trainingdata_forestimation_K_%d.pt'%K_number)
    # torch.load('./loss_gnn_mnist_lost_newtrainingdata_forestimation_K_%d.pt'%K_number)



    # old = torch.load('./acc_ll_mnist_gnn_K_%d.pt'%K_number)
    # # torch.load('./loss_gnn_mnist_lost_K_%d.pt'%K_number)
    # new = torch.load('./acc_ll_mnist_gnn_new_trainingdata_K_%d.pt'%K_number)
    # # torch.load('./loss_gnn_mnist_lost_newtrainingdata_K_%d'%K_number)
    # x_label = [i for i in range(20)]
    # plt.plot(x_label,old, label='randn(0,1)')
    # plt.plot(x_label,new,label='generated by the problem')
    # plt.legend()
    # plt.xlabel('epochs')
    # plt.ylabel('average accuracy')
    # plt.title('GNNavg on MNIST dataset, K=%d'%K_number)
    # plt.show()

